services:
  mti-database:
    image: postgres:16-alpine
    container_name: mti_database
    env_file:
      - .env
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - web-net
    volumes:
      - ./db_volume:/var/lib/postgresql

  mti-app:
    build: .
    container_name: mti_app
    env_file:
      - .env
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}

    command: sh -c "gunicorn core.wsgi:application --bind 0.0.0.0:${DJANGO_PORT:?error missing DJANGO_PORT env}"
#    command: >
#      sh -c "python manage.py makemigrations &&
#             python manage.py migrate &&
#             python manage.py collectstatic --noinput &&
#             python manage.py runserver 0.0.0.0:${DJANGO_PORT:?error missing DJANGO_PORT env}"
    ports:
      - "8000:8000"
    volumes:
      - ./source:/app
    networks:
      - web-net

  mti-nginx:
    container_name: mti_nginx
    image: nginx:latest
    ports:
      - "80:80"
#      - "443:443"
    command: "/bin/sh /nginx-start-autoreload.sh"
    volumes:
      - ./source/staticfiles:/app/staticfiles
      - ./nginx/conf_dev/:/etc/nginx/conf.d/:ro
      - ./nginx/nginx-start-autoreload.sh:/nginx-start-autoreload.sh
    environment:
      - DJANGO_PORT=${DJANGO_PORT:?error missing DJANGO_PORT env}
    depends_on:
      - mti-app
    networks:
      - web-net
    restart: always

networks:
  web-net:
    driver: bridge

volumes:
  django_volume: